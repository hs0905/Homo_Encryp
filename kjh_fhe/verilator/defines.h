#include <cmath>

#ifndef __FHE_ALU_VERILATOR_DEFINES_H__
#define __FHE_ALU_VERILATOR_DEFINES_H__

#define CEILDIV(x,y) (((x) + (y) -1)/(y))
#define MAX(x,y) ( ( (x) > (y) ) ? (x) : (y) )
#define MIN(x,y) ( ( (x) < (y) ) ? (x) : (y) )


#define DDR_WIDTH_BYTE 32
#define FSIZE_BYTE 4

#define COMMAND_RESET 111

#define COMMAND_BUTTER_W 10
#define COMMAND_BUTTER_P 11
#define COMMAND_BUTTER_A 12

#define COMMAND_NTT_W 1
#define COMMAND_NTT_WQ 2
#define COMMAND_NTT_P 3
#define COMMAND_NTT_A 4
#define COMMAND_NTT_GET_PE_SELECT 5
#define COMMAND_NTT_GET 6

#define COMMAND_SET_BACKGROUND1 12
#define COMMAND_SET_BACKGROUND2 13


// #define COMMAND_IBUTTER_W 10
// #define COMMAND_IBUTTER_P 11
// #define COMMAND_IBUTTER_A 12
// #define COMMAND_IBUTTER_SCALAR 13

// #define COMMAND_INTT_W 30
// #define COMMAND_INTT_P 31
// #define COMMAND_INTT_SCALAR 35
// #define COMMAND_INTT_A 32
#define COMMAND_NTT_RUN1 41
#define COMMAND_NTT_RUN2 42
#define COMMAND_NTT_RUN3 43
#define COMMAND_NTT_RUN4 44
#define COMMAND_INTT_RUN1 51
#define COMMAND_INTT_RUN2 52
#define COMMAND_INTT_RUN3 53
#define COMMAND_INTT_RUN4 54

#define COMMAND_MULTI_NTT_RUN1 55
#define COMMAND_MULTI_NTT_RUN2 56
#define COMMAND_MULTI_INTT_RUN1 57
#define COMMAND_MULTI_INTT_RUN2 58
// #define COMMAND_INTT_GET 34

// #define COMMAND_BITREVERSE 7
// #define COMMAND_TRANSPOSE 8
// #define COMMAND_PERM_PATTERN 9
// #define COMMAND_PERM_PATTERN_GENERATE 40
// #define COMMAND_SET_UNIT 18

// #define COMMAND_VECTOR_MULT_MOD 13
// #define COMMAND_VECTOR_BARRETT_REDUCTION 18
// #define COMMAND_VECTOR_LAZY_REDUCTION 19
// #define COMMAND_VECTOR_DECOMP 21
// #define COMMAND_VECTOR_SCALAR_MULT_MOD1 14
// #define COMMAND_VECTOR_SCALAR_MULT_MOD2 15
// #define COMMAND_VECTOR_ADD_MOD 16
// #define COMMAND_VECTOR_ADD_MOD_SCALAR 17
// #define COMMAND_AUTO 22

#define COMMAND_VECTOR_MULT_MOD_PQ 59

#define COMMAND_BITREVERSE1  60
#define COMMAND_TRANSPOSE1   61
#define COMMAND_PERM_PATTERN1   62
#define COMMAND_AUTO1  63
#define COMMAND_VECTOR_ADD_MOD1  64
#define COMMAND_VECTOR_ADD_MOD_SCALAR1  65
#define COMMAND_VECTOR_MULT_MOD1  66
#define COMMAND_VECTOR_SCALAR_MULT_MOD1  67
#define COMMAND_VECTOR_BARRETT_REDUCTION1  68
#define COMMAND_VECTOR_LAZY_REDUCTION1  69
#define COMMAND_SET_UNIT1  70
#define COMMAND_VECTOR_DECOMP1  71
#define COMMAND_VECTOR_SUB1  72

#define COMMAND_BITREVERSE2   80
#define COMMAND_TRANSPOSE2   81
#define COMMAND_PERM_PATTERN2   82
#define COMMAND_AUTO2  83
#define COMMAND_VECTOR_ADD_MOD2  84
#define COMMAND_VECTOR_ADD_MOD_SCALAR2  85
#define COMMAND_VECTOR_MULT_MOD2  86
#define COMMAND_VECTOR_SCALAR_MULT_MOD2  87
#define COMMAND_VECTOR_BARRETT_REDUCTION2  88
#define COMMAND_VECTOR_LAZY_REDUCTION2  89
#define COMMAND_SET_UNIT2  90
#define COMMAND_VECTOR_DECOMP2  91
#define COMMAND_VECTOR_SUB2  92



#define COMMAND_SET_MODULE1 20
#define COMMAND_SET_MODULE2 21
#define COMMAND_SET_MODULE3 22
#define COMMAND_SET_RAM1 23
#define COMMAND_SET_RAM2 24
#define COMMAND_SET_RAM3 25
#define COMMAND_SET_RAM4 26
#define COMMAND_SET_SLOT_NTT 27
#define COMMAND_SET_SLOT_ROOT 28
#define COMMAND_SET_RING 29 

#define STATE_IDLE 0

#define REV_TRANS_MODULE_NUM  2
#define PERM_MODULE_NUM  2
#define AUTO_MODULE_NUM  2
#define NTT_MODULE_NUM  4
#define INTT_MODULE_NUM  4
#define ADD_MODULE_NUM  2
#define MULTI_MODULE_NUM  2
#define LAZY_MODULE_NUM  2
#define SET_UINT_MODULE_NUM  2
#define DECOMP_MODULE_NUM  2

#define MODULE_NUM  (1 + REV_TRANS_MODULE_NUM + PERM_MODULE_NUM*2 + AUTO_MODULE_NUM + NTT_MODULE_NUM + INTT_MODULE_NUM + ADD_MODULE_NUM*2 + MULTI_MODULE_NUM*2 + LAZY_MODULE_NUM*4 + SET_UINT_MODULE_NUM*2 + DECOMP_MODULE_NUM)
#define STAGE_MODULE  ceil(log2(MODULE_NUM))
#define STAGE_MODULE_POWER  pow(2,STAGE_MODULE)

#define SLOT_NUM  24 // number of buffer ram slot
#define STAGE_SLOT  ceil(log2(SLOT_NUM))
#define STAGE_SLOT_POWER  pow(2,STAGE_SLOT)

#define NTT_INTT_NUM  8 //number of ntt and intt module
#define STAGE_NTT_INTT  ceil(log2(NTT_INTT_NUM))
#define STAGE_NTT_INTT_POWER  pow(2,STAGE_NTT_INTT)

#define ROOT_POWER_NUM  4 //number of rootpower
#define STAGE_ROOT_POWER  ceil(log2(ROOT_POWER_NUM))
#define STAGE_ROOT_POWER_POWER  pow(2,STAGE_ROOT_POWER)

#define N 8192
#define logN 13
// #define N 16384
// #define logN 14
// #define N 32748
// #define logN 15
// #define N 65536
// #define logN 16
#define E 8
#define logE 3


#endif //__FHE_ALU_VERILATOR_DEFINES_H__
